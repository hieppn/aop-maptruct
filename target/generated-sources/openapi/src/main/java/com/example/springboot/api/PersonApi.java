/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.springboot.api;

import com.example.springboot.api.model.CreatePersonRequest;
import com.example.springboot.api.model.GetPersons;
import com.example.springboot.api.model.ObjectCreationSuccessResponse;
import com.example.springboot.api.model.PersonModel;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-07-16T00:31:56.149+07:00[Asia/Bangkok]")

@Validated
@Api(value = "person", description = "the person API")
public interface PersonApi {

    @ApiOperation(value = "find person by id", nickname = "findPersonById", notes = "", response = PersonModel.class, tags={ "findPersonById", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successfully", response = PersonModel.class) })
    @RequestMapping(value = "/person/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<PersonModel> findPersonById(@ApiParam(value = "id",required=true, defaultValue="null") @PathVariable("id") Object id);


    @ApiOperation(value = "Get all", nickname = "getPersons", notes = "", response = GetPersons.class, tags={ "getPersons", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful", response = GetPersons.class) })
    @RequestMapping(value = "/person",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<GetPersons> getPersons();


    @ApiOperation(value = "save Person", nickname = "savePerson", notes = "", response = ObjectCreationSuccessResponse.class, tags={ "savePerson", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "successful", response = ObjectCreationSuccessResponse.class) })
    @RequestMapping(value = "/person",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ObjectCreationSuccessResponse> savePerson(@ApiParam(value = "firstName and lastName"  )  @Valid @RequestBody CreatePersonRequest createPersonRequest);

}
